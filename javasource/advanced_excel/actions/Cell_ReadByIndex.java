// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package advanced_excel.actions;

import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import com.mendix.core.Core;
import com.mendix.logging.ILogNode;
import java.io.IOException;
import advanced_excel.proxies.DocumentType;
import advanced_excel.Utils;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.CreationHelper;
import org.apache.poi.ss.usermodel.FormulaEvaluator;
import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.ss.usermodel.DateUtil;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.systemwideinterfaces.core.UserAction;

/**
 * Reads the value of a cell, defined by its index.
 */
public class Cell_ReadByIndex extends UserAction<java.lang.String>
{
	private final java.lang.String WorkbookID;
	private final java.lang.String SheetName;
	private final java.lang.Long Row;
	private final java.lang.Long Column;

	public Cell_ReadByIndex(
		IContext context,
		java.lang.String _workbookID,
		java.lang.String _sheetName,
		java.lang.Long _row,
		java.lang.Long _column
	)
	{
		super(context);
		this.WorkbookID = _workbookID;
		this.SheetName = _sheetName;
		this.Row = _row;
		this.Column = _column;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
		try
		{
			DocumentType docType = Utils.GetDocumentType(WorkbookID);
			Workbook workbook = Utils.GetWorkBook(WorkbookID);
			if (workbook == null) {
				logger.error("ERROR in Advanced_Excel.Cell_ReadByIndex:\nWorkbook object not found\nyou have to use Workbook_Create, Workbook_Open or Workbook_LoadFile to create the Workbook object");
				return "";
			}
			
			Sheet sheet = workbook.getSheet(this.SheetName);
			if (sheet == null) { throw new Exception("Sheet: " + this.SheetName + " not found!"); }
			Integer rowNum = this.Row.intValue();
			Integer colNum = this.Column.intValue();
			
			Row row = sheet.getRow(rowNum);
			if (row == null) { return ""; }
			Cell cell = row.getCell(colNum);
			if (cell == null) { return ""; }
			
			String cellValue = "";
            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd hh:mm:ss");  
			CreationHelper helper = workbook.getCreationHelper();
			FormulaEvaluator evaluator = helper.createFormulaEvaluator();
			DataFormatter formatter = new DataFormatter();
			
			if (cell.getCellType() == CellType.FORMULA) {
				switch (cell.getCachedFormulaResultType()) {
					case BOOLEAN:
						cellValue = "" + cell.getBooleanCellValue();
						break;
					case NUMERIC:
						cellValue = String.valueOf(cell.getNumericCellValue());
						break;
					case STRING:
						cellValue = "" + cell.getRichStringCellValue();
						break;
				}
			}
			else if (cell.getCellType() == CellType.NUMERIC) {
				if (DateUtil.isCellDateFormatted(cell)) {
					Date date = cell.getDateCellValue();
					cellValue = dateFormat.format(date);
				}
				else
				{ cellValue = formatter.formatCellValue(cell); }
			}
			else
			{ cellValue = formatter.formatCellValue(cell); }
			
			return cellValue;
		} catch (Exception e) {
			logger.error("ERROR in Advanced_Excel.Cell_ReadByIndex: " + e.getMessage() + "\n" + e.toString(), e);
			return "";
		} 
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "Cell_ReadByIndex";
	}

	// BEGIN EXTRA CODE
	protected static ILogNode logger = Core.getLogger("Advanced_Excel");
	// END EXTRA CODE
}
